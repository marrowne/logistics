{"ast":null,"code":"var _jsxFileName = \"/home/moohrdy/IdeaProjects/logistics/logistics-panel/src/parcelStates.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { buildURLFor, properties } from \"./config\";\n\nclass CourierReceivedButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        record\n      } = this.props;\n      fetch(buildURLFor(properties.tracking.endpoint.courier.received, properties.tracking.endpoint.host, properties.tracking.endpoint.protocol, properties.tracking.endpoint.port) + `${record.id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(() => {}).catch(e => {\n        console.error(e);\n      });\n    };\n  }\n\n  render() {\n    const {\n      record\n    } = this.props;\n    const is_state_incorrect = record.status !== 'CREATED' && record.status !== 'DEST_SORTING' && record.status !== 'RET_SRC_SORTING';\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: is_state_incorrect,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Received\");\n  }\n\n}\n\nCourierReceivedButton.propTypes = {\n  push: PropTypes.func,\n  record: PropTypes.object,\n  showNotification: PropTypes.func\n};\n\nclass SortingReceivedButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        record\n      } = this.props;\n      fetch(buildURLFor(properties.tracking.endpoint.sorting.received, properties.tracking.endpoint.host, properties.tracking.endpoint.protocol, properties.tracking.endpoint.port) + `${record.id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(() => {}).catch(e => {\n        console.error(e);\n      });\n    };\n  }\n\n  render() {\n    const {\n      record\n    } = this.props;\n    const is_state_incorrect = record.status !== 'PICKUP' && record.status !== 'TRANSIT' && record.status !== 'RETURNED' && record.status !== 'RET_TRANSIT';\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: is_state_incorrect,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Received\");\n  }\n\n}\n\nSortingReceivedButton.propTypes = {\n  push: PropTypes.func,\n  record: PropTypes.object,\n  showNotification: PropTypes.func\n};\n\nclass SortingLeftButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        record\n      } = this.props;\n      fetch(buildURLFor(properties.tracking.endpoint.sorting.left, properties.tracking.endpoint.host, properties.tracking.endpoint.protocol, properties.tracking.endpoint.port) + `${record.id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(() => {}).catch(e => {\n        console.error(e);\n      });\n    };\n  }\n\n  render() {\n    const {\n      record\n    } = this.props;\n    const is_state_incorrect = record.status !== 'SRC_SORTING' && record.status !== 'RET_DEST_SORTING';\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: is_state_incorrect,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Left\");\n  }\n\n}\n\nSortingLeftButton.propTypes = {\n  push: PropTypes.func,\n  record: PropTypes.object,\n  showNotification: PropTypes.func\n};\n\nclass CourierDeliveredButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        record\n      } = this.props;\n      fetch(buildURLFor(properties.tracking.endpoint.courier.delivered, properties.tracking.endpoint.host, properties.tracking.endpoint.protocol, properties.tracking.endpoint.port) + `${record.id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(() => {}).catch(e => {\n        console.error(e);\n      });\n    };\n  }\n\n  render() {\n    const {\n      record\n    } = this.props;\n    const is_state_incorrect = record.status !== 'IN_DELIVERY' && record.status !== 'RET_IN_DELIVERY';\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: is_state_incorrect,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"Delivered\");\n  }\n\n}\n\nCourierDeliveredButton.propTypes = {\n  push: PropTypes.func,\n  record: PropTypes.object,\n  showNotification: PropTypes.func\n};\n\nclass CourierReturnedButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        record\n      } = this.props;\n      fetch(buildURLFor(properties.tracking.endpoint.courier.returned, properties.tracking.endpoint.host, properties.tracking.endpoint.protocol, properties.tracking.endpoint.port) + `${record.id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(() => {}).catch(e => {\n        console.error(e);\n      });\n    };\n  }\n\n  render() {\n    const {\n      record\n    } = this.props;\n    const is_state_incorrect = record.status !== 'IN_DELIVERY' && record.status !== 'RET_IN_DELIVERY';\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: is_state_incorrect,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \"Returned\");\n  }\n\n}\n\nCourierReturnedButton.propTypes = {\n  push: PropTypes.func,\n  record: PropTypes.object,\n  showNotification: PropTypes.func\n};\nexport { CourierDeliveredButton, CourierReceivedButton, CourierReturnedButton, SortingReceivedButton, SortingLeftButton };","map":{"version":3,"sources":["/home/moohrdy/IdeaProjects/logistics/logistics-panel/src/parcelStates.js"],"names":["React","Component","PropTypes","Button","buildURLFor","properties","CourierReceivedButton","handleClick","record","props","fetch","tracking","endpoint","courier","received","host","protocol","port","id","method","headers","localStorage","getItem","then","catch","e","console","error","render","is_state_incorrect","status","propTypes","push","func","object","showNotification","SortingReceivedButton","sorting","SortingLeftButton","left","CourierDeliveredButton","delivered","CourierReturnedButton","returned"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport {buildURLFor, properties} from \"./config\";\n\n\nclass CourierReceivedButton extends Component {\n    handleClick = () => {\n        const { record } = this.props;\n        fetch(buildURLFor(\n                properties.tracking.endpoint.courier.received,\n                properties.tracking.endpoint.host,\n                properties.tracking.endpoint.protocol,\n                properties.tracking.endpoint.port) + `${record.id}`,\n            { method: 'PUT', headers: {'Authorization': 'Bearer ' + localStorage.getItem('token') } })\n            .then(() => {\n            })\n            .catch((e) => {\n                console.error(e);\n            });\n    };\n\n    render() {\n        const { record } = this.props;\n        const is_state_incorrect = record.status !== 'CREATED'\n            && record.status !== 'DEST_SORTING'\n            && record.status !== 'RET_SRC_SORTING';\n        return  <Button variant=\"contained\" color=\"primary\" disabled={is_state_incorrect} onClick={this.handleClick}>\n                    Received\n                    {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\n                </Button>\n\n    }\n}\n\nCourierReceivedButton.propTypes = {\n    push: PropTypes.func,\n    record: PropTypes.object,\n    showNotification: PropTypes.func,\n};\n\nclass SortingReceivedButton extends Component {\n    handleClick = () => {\n        const { record } = this.props;\n        fetch(buildURLFor(\n                properties.tracking.endpoint.sorting.received,\n                properties.tracking.endpoint.host,\n                properties.tracking.endpoint.protocol,\n                properties.tracking.endpoint.port) + `${record.id}`,\n            { method: 'PUT', headers: {'Authorization': 'Bearer ' + localStorage.getItem('token') } })\n            .then(() => {\n            })\n            .catch((e) => {\n                console.error(e);\n            });\n    };\n\n    render() {\n        const { record } = this.props;\n        const is_state_incorrect = record.status !== 'PICKUP'\n            && record.status !== 'TRANSIT'\n            && record.status !== 'RETURNED'\n            && record.status !== 'RET_TRANSIT';\n        return  <Button variant=\"contained\" color=\"secondary\" disabled={is_state_incorrect} onClick={this.handleClick}>\n            Received\n            {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\n        </Button>\n\n    }\n}\n\nSortingReceivedButton.propTypes = {\n    push: PropTypes.func,\n    record: PropTypes.object,\n    showNotification: PropTypes.func,\n};\n\nclass SortingLeftButton extends Component {\n    handleClick = () => {\n        const { record } = this.props;\n        fetch(buildURLFor(\n                properties.tracking.endpoint.sorting.left,\n                properties.tracking.endpoint.host,\n                properties.tracking.endpoint.protocol,\n                properties.tracking.endpoint.port) + `${record.id}`,\n            { method: 'PUT', headers: {'Authorization': 'Bearer ' + localStorage.getItem('token') } })\n            .then(() => {\n            })\n            .catch((e) => {\n                console.error(e);\n            });\n    };\n\n    render() {\n        const { record } = this.props;\n        const is_state_incorrect = record.status !== 'SRC_SORTING'\n                && record.status !== 'RET_DEST_SORTING';\n        return  <Button variant=\"contained\" color=\"primary\" disabled={is_state_incorrect} onClick={this.handleClick}>\n            Left\n        </Button>\n\n    }\n}\n\nSortingLeftButton.propTypes = {\n    push: PropTypes.func,\n    record: PropTypes.object,\n    showNotification: PropTypes.func,\n};\n\nclass CourierDeliveredButton extends Component {\n    handleClick = () => {\n        const { record } = this.props;\n        fetch(buildURLFor(\n                properties.tracking.endpoint.courier.delivered,\n                properties.tracking.endpoint.host,\n                properties.tracking.endpoint.protocol,\n                properties.tracking.endpoint.port) + `${record.id}`,\n            { method: 'PUT', headers: {'Authorization': 'Bearer ' + localStorage.getItem('token') } })\n            .then(() => {\n            })\n            .catch((e) => {\n                console.error(e);\n            });\n    };\n\n    render() {\n        const { record } = this.props;\n        const is_state_incorrect = record.status !== 'IN_DELIVERY'\n                && record.status !== 'RET_IN_DELIVERY';\n        return  <Button variant=\"contained\" color=\"secondary\" disabled={is_state_incorrect} onClick={this.handleClick}>\n            Delivered\n        </Button>\n\n    }\n}\n\nCourierDeliveredButton.propTypes = {\n    push: PropTypes.func,\n    record: PropTypes.object,\n    showNotification: PropTypes.func,\n};\n\nclass CourierReturnedButton extends Component {\n    handleClick = () => {\n        const { record } = this.props;\n        fetch(buildURLFor(\n            properties.tracking.endpoint.courier.returned,\n            properties.tracking.endpoint.host,\n            properties.tracking.endpoint.protocol,\n            properties.tracking.endpoint.port) + `${record.id}`,\n            { method: 'PUT', headers: {'Authorization': 'Bearer ' + localStorage.getItem('token') } })\n            .then(() => {\n            })\n            .catch((e) => {\n                console.error(e);\n            });\n    };\n\n    render() {\n        const { record } = this.props;\n        const is_state_incorrect = record.status !== 'IN_DELIVERY'\n            && record.status !== 'RET_IN_DELIVERY';\n        return  <Button variant=\"contained\" color=\"secondary\" disabled={is_state_incorrect} onClick={this.handleClick}>\n            Returned\n            </Button>\n\n    }\n}\n\nCourierReturnedButton.propTypes = {\n    push: PropTypes.func,\n    record: PropTypes.object,\n    showNotification: PropTypes.func,\n};\n\nexport { CourierDeliveredButton, CourierReceivedButton, CourierReturnedButton, SortingReceivedButton, SortingLeftButton };\n"]},"metadata":{},"sourceType":"module"}